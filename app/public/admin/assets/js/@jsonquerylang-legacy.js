System.register([],(function(t,n){"use strict";return{execute:function(){t({K:function(t,n,r){return u(e(n)?d(n):n)(t)},M:d});const n=t=>Array.isArray(t),e=t=>"string"==typeof t;function r(t){return(...n)=>{const e=n.map((t=>u(t))),r=e[0],o=e[1];return 1===e.length?n=>t(r(n)):2===e.length?n=>t(r(n),o(n)):n=>t(...e.map((t=>t(n))))}}const o={pipe:(...t)=>{const n=t.map((t=>u(t)));return t=>n.reduce(((t,n)=>n(t)),t)},object:t=>{const n=Object.keys(t).map((n=>[n,u(t[n])]));return t=>{const e={};for(const[r,o]of n)e[r]=o(t);return e}},array:(...t)=>{const n=t.map((t=>u(t)));return t=>n.map((n=>n(t)))},get:(...t)=>{if(0===t.length)return t=>t;if(1===t.length){const n=t[0];return t=>null==t?void 0:t[n]}return n=>{let e=n;for(const r of t)e=null==e?void 0:e[r];return e}},map:t=>{const n=u(t);return t=>t.map(n)},filter:t=>{const n=u(t);return t=>t.filter(n)},sort:(t=["get"],n)=>{const e=u(t),r="desc"===n?-1:1;function o(t,n){const o=e(t),s=e(n);return o>s?r:o<s?-r:0}return t=>t.slice().sort(o)},pick:(...t)=>{const e=t.map((([t,...n])=>[n[n.length-1],o.get(...n)])),r=(t,n)=>{const e={};for(const[r,o]of n)e[r]=o(t);return e};return t=>n(t)?t.map((t=>r(t,e))):r(t,e)},groupBy:t=>{const n=u(t);return t=>{const e={};for(const r of t){const t=n(r);e[t]?e[t].push(r):e[t]=[r]}return e}},keyBy:t=>{const n=u(t);return t=>{const e={};for(const r of t){const t=n(r);e[t]=e[t]??r}return e}},flatten:()=>t=>t.flat(),uniq:()=>t=>[...new Set(t)],uniqBy:t=>n=>Object.values(o.groupBy(t)(n)).map((t=>t[0])),limit:t=>n=>n.slice(0,t),size:()=>t=>t.length,keys:()=>Object.keys,values:()=>Object.values,prod:()=>t=>t.reduce(((t,n)=>t*n)),sum:()=>t=>t.reduce(((t,n)=>t+n)),average:()=>t=>o.sum()(t)/t.length,min:()=>t=>Math.min(...t),max:()=>t=>Math.max(...t),in:(t,n)=>{const e=u(t),r=u(n);return t=>r(t).includes(e(t))},"not in":(t,n)=>{const e=o.in(t,n);return t=>!e(t)},regex:(t,n,e)=>{const r=new RegExp(n,e),o=u(t);return t=>r.test(o(t))},and:r(((t,n)=>t&&n)),or:r(((t,n)=>t||n)),not:r((t=>!t)),exists:r((t=>void 0!==t)),eq:r(((t,n)=>t===n)),gt:r(((t,n)=>t>n)),gte:r(((t,n)=>t>=n)),lt:r(((t,n)=>t<n)),lte:r(((t,n)=>t<=n)),ne:r(((t,n)=>t!==n)),add:r(((t,n)=>t+n)),subtract:r(((t,n)=>t-n)),multiply:r(((t,n)=>t*n)),divide:r(((t,n)=>t/n)),pow:r(((t,n)=>t**n)),mod:r(((t,n)=>t%n)),abs:r(Math.abs),round:r(((t,n=0)=>+`${Math.round(+`${t}e${n}`)}e${-n}`))},s=[];function u(t,e){s.unshift({...o,...s[0]});try{const e=n(t)?function(t,n){const[e,...r]=t,o=n[e];if(!o)throw new Error(`Unknown function '${e}'`);return o(...r)}(t,s[0]):()=>t;return n=>{try{return e(n)}catch(r){throw r.jsonquery=[{data:n,query:t},...r.jsonquery??[]],r}}}finally{s.shift()}}const c={and:"and",or:"or",eq:"==",gt:">",gte:">=",lt:"<",lte:"<=",ne:"!=",add:"+",subtract:"-",multiply:"*",divide:"/",pow:"^",mod:"%",in:"in","not in":"not in"},i=/^[a-zA-Z_$][a-zA-Z\d_$]*$/,a=/^[a-zA-Z_$][a-zA-Z\d_$]*/,l=/^"(?:[^"\\]|\\.)*"/,f=/^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?/,p=/^(0|[1-9][0-9]*)/,g=/^(true|false|null)/,h=/^[ \n\t\r]+/;function d(t,n){const e=()=>{w();const n=r();if(w(),"|"===t[k]){const e=[n];for(;"|"===t[k];)k++,w(),e.push(r());return["pipe",...e]}return n},r=()=>{const n={...c},e=s();w();for(const r of Object.keys(n).sort(((t,n)=>n.length-t.length))){const o=n[r];if(t.substring(k,k+o.length)===o)return k+=o.length,w(),[r,e,s()]}return e},s=()=>{if("("===t[k]){k++;const t=e();return v(")"),t}return u()},u=()=>{const n=[];if("."===t[k]){for(;"."===t[k];)k++,n.push(m()??y()??j()??S("Property expected"));return["get",...n]}return i()},i=()=>{const n=k,r=y();if(w(),!r||"("!==t[k])return k=n,d();k++,!o[r]&&S(`Unknown function '${r}'`),w();const s=")"!==t[k]?[e()]:[];for(;k<t.length&&")"!==t[k];)w(),v(","),s.push(e());return v(")"),[r,...s]},d=()=>{if("{"===t[k]){k++,w();const n={};let r=!0;for(;k<t.length&&"}"!==t[k];){r?r=!1:(v(","),w());const t=m()??y()??j()??S("Key expected");w(),v(":"),n[t]=e()}return v("}"),["object",n]}return $()},$=()=>{if("["===t[k]){k++,w();const n=[];let r=!0;for(;k<t.length&&"]"!==t[k];)r?r=!1:(v(","),w()),n.push(e());return v("]"),["array",...n]}return m()??b()??x()},m=()=>O(l,JSON.parse),y=()=>O(a,(t=>t)),b=()=>O(f,JSON.parse),j=()=>O(p,JSON.parse),x=()=>{const t=O(g,JSON.parse);if(void 0!==t)return t;S("Value expected")},O=(n,e)=>{const r=t.substring(k).match(n);if(r)return k+=r[0].length,e(r[0])},w=()=>O(h,(t=>t)),v=n=>{t[k]!==n&&S(`Character '${n}' expected`),k++},S=(t,n=k)=>{throw new SyntaxError(`${t} (pos: ${n})`)};let k=0;const q=e();return w(),k<t.length&&S(`Unexpected part '${t.substring(k)}'`),q}t("D",((t,e)=>{const r="  ",o=(t,e)=>n(t)?s(t,e):JSON.stringify(t),s=(t,n)=>{const[e,...s]=t;if("get"===e&&s.length>0)return a(s);if("pipe"===e){const t=s.map((t=>o(t,n+r)));return f(t,[""," | ",""],["",`\n${n+r}| `,""])}if("object"===e)return u(s[0],n);if("array"===e){const t=s.map((t=>o(t,n)));return f(t,["[",", ","]"],[`[\n${n+r}`,`,\n${n+r}`,`\n${n}]`])}const i=c[e];if(i&&2===s.length){const[t,e]=s;return`(${o(t,n)} ${i} ${o(e,n)})`}const l=1===s.length?n:n+r,p=s.map((t=>o(t,l)));return 1===s.length&&"("===p[0][0]?`${e}${p}`:f(p,[`${e}(`,", ",")"],1===s.length?[`${e}(`,`,\n${n}`,")"]:[`${e}(\n${l}`,`,\n${l}`,`\n${n})`])},u=(t,n)=>{const e=n+r,s=Object.entries(t).map((([t,n])=>`${l(t)}: ${o(n,e)}`));return f(s,["{ ",", "," }"],[`{\n${e}`,`,\n${e}`,`\n${n}}`])},a=t=>t.map((t=>`.${l(t)}`)).join(""),l=t=>i.test(t)?t:JSON.stringify(t),f=(t,[n,e,r],[o,s,u])=>n.length+t.reduce(((t,n)=>t+n.length+e.length),0)-e.length+r.length<=40?n+t.join(e)+r:o+t.join(s)+u;return o(t,"")}))}}}));
